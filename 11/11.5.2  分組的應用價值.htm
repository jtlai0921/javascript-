<script language="javascript" type="text/javascript">

//價值一，把單獨的項目進行分組，以便合成子表達式，這樣就可以像處理一個獨立的字符那樣，使用|、+、*或?等元字符來處理它們。例如：
var s ="javascript is not java";
var r = /java(script)?/g;
var a = s.match(r); 	//傳回陣列["javascript","java"]

//價值二，在正則表達式中，透過分組可以在一個完整的模式中定義子模式。當一個正則表達式成功的與目標字串相比對時，也可以從目標字串中抽出與小括號中的子模式相比對的部分。例如：
var s ="ab=21,bc=45,cd=43";
var r = /(\w+)=(\d*)/;
var a = s.match(r);	//傳回陣列["ab=21" , "ab","21"]

//價值三，在同一個正則表達式的後部可以參考前面的子表達式。這是透過在字符"\"後加一位或多位數字實現的。數字指定了帶括號的子表達式在正則表達式中的位置。如"\1"參考的是第一個帶括號的子表達式，"\2"參考的是第二個帶小括號的子表達式。例如：
var s ="<h1>title<h1><p>text<p>";
var r = /(<\/?\w+>).*\1/g;
var a = s.match(r); 	//傳回陣列["<h1>title<h1>" , "<p>text<p>"]


</script>
