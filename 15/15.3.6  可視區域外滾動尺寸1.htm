<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>

<head>

<title></title>

</head>

<body>


<textarea id="text" rows="5" cols="25" style="float:right;"></textarea>
<div id="div" style="height:200px;width:200px;border:solid 50px red;padding:50px;overflow:auto;">
    <div id="info" style="height:400px;width:400px;border:solid 1px blue;"></div>
</div>


<script language="javascript" type="text/javascript">

var info = document.getElementById("info");
var m = 0, n = 1, s = "";
while(m ++ < 19)
{
    s += m + "  ";
}
s += "<br />";
while(n ++ < 21)
{
    s += n + "<br />";
}
info.innerHTML = s;




var div = document.getElementById("div");

var a = div.scrollHeight;
var b = div.clientHeight - 34;


var c = a/b ;



div.scrollLeft = c;
div.scrollTop = c;

alert(a);
alert(b);
alert(c);


var text = document.getElementById("text");
div.onscroll = function(){ 
    text.value =    "scrollLeft   = " + div.scrollLeft + "\n" +
                    "scrollTop    = " + div.scrollTop + "\n" +
                    "scrollWidth  = " + div.scrollWidth + "\n" +
                    "scrollHeight = " + div.scrollHeight ;
} 


/*
var ws = div.scrollWidth;
var hs = div.scrollHeight;
var l = div.scrollLeft;
var t = div.scrollTop;
alert(ws);
alert(hs);
alert(l);
alert(t);
*/

function getW(e)
{
    if(getStyle(e, "display") != "none") return e.offsetWidth || fromStyle(getStyle(e, "width"));
    var r = setCSS( e,
    {
        display : "",
        position : "absolute",
        visibility : "hidden"
    }
    );
    var w = e.offsetWidth || fromStyle(getStyle(e, "width"));
    resetCSS(e, r);
    return w;
}

function getH(e)
{
    if(getStyle(e, "display") != "none") return e.offsetHeight || fromStyle(getStyle(e, "height"));
    var r = setCSS( e,
    {
        display : "",
        position : "absolute",
        visibility : "hidden"
    }
    );
    var h = e.offsetHeight || fromStyle(getStyle(e, "height"));
    resetCSS(e, r);
    return h;
}

function setCSS(e, o)
{
    var a =
    {
    }
    ;
    for(var i in o)
    {
        a[i] = e.style[i];
        e.style[i] = o[i];
    }
    return a;
}

function resetCSS(e, o)
{
    for(var i in o)
    {
        e.style[i] = o[i];
    }
}

function fromStyle(e, w, p)
{
    var p = arguments[2];
    if( ! p) p = 1;

    if(/px/.test(w) && parseInt(w) ) return parseInt(parseInt(w) * p);
    else if(/\%/.test(w) && parseInt(w))
    {
        var b = parseInt(w) / 100;
        if((p != 1) && p) b *= p;
        e = e.parentNode;
        if(e.tagName == "BODY") throw new Error("整個文件結構都沒有定義固定尺寸，沒法計算了，請使用其他方法獲得尺寸.");
        w = getStyle(e, "height");
        return arguments.callee(e, w, b);
    }
    else if(/auto/.test(w))
    {
        var b = 1;
        if((p != 1) && p) b *= p;
        e = e.parentNode;
        if(e.tagName == "BODY") throw new Error("整個文件結構都沒有定義固定尺寸，沒法計算了，請使用其他方法獲得尺寸.");
        w = getStyle(e, "height");
        return arguments.callee(e, w , b);
    }
    else
    throw new Error("元素或其父元素的尺寸定義有特殊的單位.");
}

function getStyle(e, n)
{
    if(e.style[n])
    {
        return e.style[n];
    }
    else if(e.currentStyle)
    {
        return e.currentStyle[n];
    }
    else if(document.defaultView && document.defaultView.getComputedStyle)
    {
        n = n.replace(/([A-Z])/g, "-$1");
        n = n.toLowerCase();
        var s = document.defaultView.getComputedStyle(e, null);
        if(s) return s.getPropertyValue(n);
    }
    else
    return null;
}

</script>

</body>

</html>
